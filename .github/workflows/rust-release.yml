name: Generate Rust Binaries and Create Release

on:
  push:
    tags:
      - 'v*'

# 添加权限配置
permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-cross-platform:
    name: Build Linux & Windows
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            name: shortlinker-linux-x86_64
          - target: aarch64-unknown-linux-gnu
            name: shortlinker-linux-aarch64
          - target: i686-unknown-linux-gnu
            name: shortlinker-linux-i686
          - target: x86_64-pc-windows-gnu
            name: shortlinker-windows-x86_64.exe

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build with cross
      run: cross build --release --target ${{ matrix.target }}

    - name: Rename binary
      run: |
        if [ "${{ matrix.target }}" = "x86_64-pc-windows-gnu" ]; then
          mv target/${{ matrix.target }}/release/shortlinker.exe ${{ matrix.name }}
        else
          mv target/${{ matrix.target }}/release/shortlinker ${{ matrix.name }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.name }}

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            name: shortlinker-macos-x86_64
          - target: aarch64-apple-darwin
            name: shortlinker-macos-aarch64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build native
      run: cargo build --release --target ${{ matrix.target }}

    - name: Rename binary
      run: mv target/${{ matrix.target }}/release/shortlinker ${{ matrix.name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.name }}

  release:
    name: Create Release
    needs: [build-cross-platform, build-macos]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release directory
      run: |
        mkdir -p release
        find artifacts -type f -exec cp {} release/ \;

    - name: Generate checksums
      run: |
        cd release
        sha256sum * > checksums.txt

    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Get changelog
      id: changelog
      run: |
        # 获取上一个标签
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -n "$PREV_TAG" ]; then
          echo "Found previous tag: $PREV_TAG"
          
          # 获取提交信息并分类
          COMMITS=$(git log --pretty=format:"%s|%h|%an" $PREV_TAG..HEAD --no-merges)
          
          # 初始化各类别
          FEATURES=""
          FIXES=""
          DOCS=""
          CHORES=""
          OTHERS=""
          
          # 处理每个提交
          while IFS='|' read -r message hash author; do
            # 跳过空行
            [ -z "$message" ] && continue
            
            # 根据 conventional commits 分类
            case "$message" in
              feat*|feature*)
                FEATURES="$FEATURES\n- $message ([$hash](https://github.com/${{ github.repository }}/commit/$hash))"
                ;;
              fix*|bugfix*)
                FIXES="$FIXES\n- $message ([$hash](https://github.com/${{ github.repository }}/commit/$hash))"
                ;;
              docs*)
                DOCS="$DOCS\n- $message ([$hash](https://github.com/${{ github.repository }}/commit/$hash))"
                ;;
              chore*|build*|ci*|style*|refactor*|perf*|test*)
                CHORES="$CHORES\n- $message ([$hash](https://github.com/${{ github.repository }}/commit/$hash))"
                ;;
              *)
                OTHERS="$OTHERS\n- $message ([$hash](https://github.com/${{ github.repository }}/commit/$hash))"
                ;;
            esac
          done <<< "$COMMITS"
          
          # 构建 changelog
          CHANGELOG=""
          
          if [ -n "$FEATURES" ]; then
            CHANGELOG="$CHANGELOG### 🚀 新功能\n$FEATURES\n\n"
          fi
          
          if [ -n "$FIXES" ]; then
            CHANGELOG="$CHANGELOG### 🐛 Bug 修复\n$FIXES\n\n"
          fi
          
          if [ -n "$DOCS" ]; then
            CHANGELOG="$CHANGELOG### 📚 文档更新\n$DOCS\n\n"
          fi
          
          if [ -n "$OTHERS" ]; then
            CHANGELOG="$CHANGELOG### 🔄 其他改进\n$OTHERS\n\n"
          fi
          
          if [ -n "$CHORES" ]; then
            CHANGELOG="$CHANGELOG### 🛠️ 开发相关\n$CHORES\n\n"
          fi
          
          # 如果没有分类的提交，显示默认信息
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="### 🔄 更新内容\n\n本次更新包含多项改进和优化。"
          fi
          
          # 添加比较链接
          CHANGELOG="$CHANGELOG---\n\n**完整更改**: [$PREV_TAG...${{ steps.tag.outputs.tag }}](https://github.com/${{ github.repository }}/compare/$PREV_TAG...${{ steps.tag.outputs.tag }})"
          
        else
          echo "No previous tag found, this is the initial release"
          CHANGELOG="### 🎉 首次发布\n\n这是 Shortlinker 的首个正式版本，包含以下核心功能：\n\n- ⚡ 高性能的短链接重定向服务\n- 🛠️ 完整的命令行管理工具\n- 🐳 Docker 容器化支持\n- 📱 跨平台兼容（Linux、macOS、Windows）\n- 🔧 简单易用的配置管理\n- 📊 JSON 文件存储，支持热重载"
        fi
        
        # 输出到 GitHub Actions
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo -e "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # 调试输出
        echo "Generated changelog:"
        echo -e "$CHANGELOG"

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        body: |
          <div align="center">
          
          # 🚀 ShortLinker ${{ steps.tag.outputs.tag }}

          <p>
            <a href="https://github.com/AptS-1547/shortlinker/releases/tag/${{ steps.tag.outputs.tag }}">
              <img src="https://img.shields.io/github/downloads/AptS-1547/shortlinker/${{ steps.tag.outputs.tag }}/total?style=for-the-badge&amp;color=blue" alt="Downloads">
            </a>
            <a href="LICENSE">
              <img src="https://img.shields.io/github/license/AptS-1547/shortlinker?style=for-the-badge" alt="License">
            </a>
            <a href="https://github.com/AptS-1547/shortlinker/actions">
              <img src="https://img.shields.io/github/actions/workflow/status/AptS-1547/shortlinker/rust-release.yml?style=for-the-badge" alt="Build Status">
            </a>
          </p>

          **高性能的链接缩短服务，使用 Rust 构建** ⚡
          
          </div>
          
          ---
          
          ## ✨ 新特性 & 改进
          
          ${{ steps.changelog.outputs.changelog }}
          
          ---
          
          ## 📦 快速下载
          
          > 💡 **提示**：选择与您系统匹配的版本，下载后可直接运行！
          
          <table>
          <tr>
          <td align="center"><img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/linux/linux-original.svg" width="32" height="32"><br><b>Linux</b></td>
          <td align="center"><img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/windows8/windows8-original.svg" width="32" height="32"><br><b>Windows</b></td>
          <td align="center"><img src="https://raw.githubusercontent.com/devicons/devicon/master/icons/apple/apple-original.svg" width="32" height="32"><br><b>macOS</b></td>
          </tr>
          <tr>
          <td>
          
          **x86_64** (Intel/AMD 64位)  
          📥 [shortlinker-linux-x86_64](https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/shortlinker-linux-x86_64)
          
          **ARM64** (树莓派4/服务器)  
          📥 [shortlinker-linux-aarch64](https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/shortlinker-linux-aarch64)
          
          **i686** (32位老设备)  
          📥 [shortlinker-linux-i686](https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/shortlinker-linux-i686)
          
          </td>
          <td>
          
          **x86_64** (64位 Windows)  
          📥 [shortlinker-windows-x86_64.exe](https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/shortlinker-windows-x86_64.exe)
          
          <br><br><br><br>
          
          </td>
          <td>
          
          **Intel** (Intel Mac)  
          📥 [shortlinker-macos-x86_64](https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/shortlinker-macos-x86_64)
          
          **Apple Silicon** (M1/M2/M3)  
          📥 [shortlinker-macos-aarch64](https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/shortlinker-macos-aarch64)
          
          <br><br>
          
          </td>
          </tr>
          </table>
          
          ---
          
          ## 🚀 快速开始
          
          ### Linux / macOS
          ```bash
          # 下载并赋予执行权限
          chmod +x shortlinker-*
          
          # 直接运行
          ./shortlinker-*
          ```
          
          ### Windows
          ```powershell
          # 直接双击运行或在命令行中执行
          .\shortlinker-windows-x86_64.exe
          ```
          
          ---
          
          ## 🔐 安全验证
          
          为确保下载文件的完整性和安全性，请验证 SHA256 校验和：
          
          ```bash
          # 下载校验文件
          curl -LO https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/checksums.txt
          
          # 验证文件完整性
          sha256sum -c checksums.txt
          
          # 或单独验证某个文件
          sha256sum shortlinker-linux-x86_64
          ```
          
          📋 **校验文件下载**：[checksums.txt](https://github.com/AptS-1547/shortlinker/releases/download/${{ steps.tag.outputs.tag }}/checksums.txt)
          
          ---
          
          ## 📖 文档 & 帮助
          
          | 资源 | 链接 | 描述 |
          |------|------|------|
          | 📚 **完整文档** | [esap.cc/docs](https://esap.cc/docs) | 详细使用指南和API文档 |
          | 🐛 **问题反馈** | [Issues](https://github.com/AptS-1547/shortlinker/issues) | 报告bug或提出功能请求 |
          | 💬 **讨论区** | [Discussions](https://github.com/AptS-1547/shortlinker/discussions) | 社区交流和问答 |
          | 🔧 **贡献指南** | [CONTRIBUTING.md](CONTRIBUTING.md) | 参与项目开发 |
          
          ---
          
          ## 🎯 主要特性
          
          - ⚡ **高性能**：基于 Rust，内存安全且极速响应
          - 🛡️ **安全可靠**：内置防护机制，数据加密存储
          - 🌐 **跨平台**：支持 Linux、Windows、macOS 多平台
          - 📊 **实时统计**：点击统计、访问分析等功能
          - 🔧 **易于部署**：单文件部署，配置简单
          - 📱 **现代化UI**：响应式设计，移动端友好
          
          ---
          
          ## 💝 支持项目
          
          如果这个项目对您有帮助，请考虑：
          
          - ⭐ **给项目点星**
          - 🐛 **报告问题**
          - 🔧 **提交PR**
          - 📢 **分享给朋友**
          
          ---
          
          <div align="center">
          
          **感谢所有贡献者和用户的支持！** ❤️
          <p>
            <img src="https://img.shields.io/github/contributors/AptS-1547/shortlinker?style=for-the-badge" alt="Contributors">
            <img src="https://img.shields.io/github/stars/AptS-1547/shortlinker?style=for-the-badge" alt="Stars">
            <img src="https://img.shields.io/github/forks/AptS-1547/shortlinker?style=for-the-badge" alt="Forks">
          </p>
          </div>

        files: |
          release/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}